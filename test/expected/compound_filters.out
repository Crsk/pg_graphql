begin;
    CREATE TYPE plan AS ENUM ('free', 'pro', 'enterprise');
    create table account(
        id serial primary key,
        email varchar(255) not null,
        plan plan not null
    );
    insert into public.account(email, plan)
    values
        ('aardvark@x.com', 'free'),
        ('bat@x.com', 'pro'),
        ('cat@x.com', 'enterprise'),
        ('dog@x.com', 'free'),
        ('elephant@x.com', 'pro');
    savepoint a;
    -- AND filter zero expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {AND: []}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- AND filter one expression
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {AND: [{id: {eq: 1}}]}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- AND filter two expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {AND: [{id: {eq: 1}}, {email: {eq: "aardvark@x.com"}}]}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- AND filter three expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {AND: [{id: {eq: 1}}, {email: {eq: "aardvark@x.com"}}, {plan: {eq: "free"}}]}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- OR filter zero expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {OR: []}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- OR filter one expression
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {OR: [{id: {eq: 1}}]}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- OR filter two expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {OR: [{id: {eq: 3}}, {email: {eq: "elephant@x.com"}}]}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- OR filter three expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {OR: [{id: {eq: 1}}, {email: {eq: "bat@x.com"}}, {plan: {eq: "enterprise"}}]}) {
                edges {
                    node {
                        id
                        email
                        plan
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "plan": "free",          +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "plan": "pro",           +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "plan": "enterprise",    +
                         "email": "cat@x.com"     +
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- NOT filter zero expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {NOT: {}}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- NOT filter one expression
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {NOT: {id: {eq: 3}}}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- multiple expressions inside a NOT filter are implicitly ANDed together
    -- NOT filter two expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {NOT: {id: {eq: 1}, email: {eq: "aardvark@x.com"}}}) {
                edges {
                    node {
                        id
                        email
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- multiple expressions inside a NOT filter are implicitly ANDed together
    -- NOT filter three expressions
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(filter: {NOT: {id: {eq: 1}, email: {eq: "aardvark@x.com"}, plan: {eq: "free"}}}) {
                edges {
                    node {
                        id
                        email
                        plan
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "plan": "pro",           +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "plan": "enterprise",    +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 4,                 +
                         "plan": "free",          +
                         "email": "dog@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "plan": "pro",           +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- AND filter (explicit) nested inside OR
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(
                filter: {
                    OR: [
                        { id: { eq: 3 } }
                        { id: { eq: 5 } }
                        { AND: [{ id: { eq: 1 } }, { email: { eq: "aardvark@x.com" } }] } # explicit AND
                    ]
                }
            ) {
                edges {
                node {
                    id
                    email
                }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- AND filter (implicit) nested inside OR
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(
                filter: {
                    OR: [
                        { id: { eq: 3 } }
                        { id: { eq: 5 } }
                        { id: { eq: 1 }, email: { eq: "aardvark@x.com" } } # implicit AND
                    ]
                }
            ) {
                edges {
                node {
                    id
                    email
                }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 5,                 +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- OR filter nested inside AND
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(
                filter: {
                    AND: [
                        { id: { gt: 0 } }
                        { id: { lt: 4 } }
                        { OR: [{email: { eq: "bat@x.com" }}, {email: { eq: "cat@x.com" }}] }
                    ]
                }
            ) {
                edges {
                node {
                    id
                    email
                }
                }
            }
        }
        $$)
    );
                 jsonb_pretty                 
----------------------------------------------
 {                                           +
     "data": {                               +
         "accountCollection": {              +
             "edges": [                      +
                 {                           +
                     "node": {               +
                         "id": 2,            +
                         "email": "bat@x.com"+
                     }                       +
                 },                          +
                 {                           +
                     "node": {               +
                         "id": 3,            +
                         "email": "cat@x.com"+
                     }                       +
                 }                           +
             ]                               +
         }                                   +
     }                                       +
 }
(1 row)

    -- NOT filter nested inside OR which is nested inside AND
    select jsonb_pretty(
        graphql.resolve($$
        {
            accountCollection(
                filter: {
                    AND: [
                        { id: { gt: 0 } }
                        { id: { lt: 4 } }
                        { OR: [{NOT: {email: { eq: "bat@x.com" }}}, {email: { eq: "cat@x.com" }}] }
                    ]
                }
            ) {
                edges {
                node {
                    id
                    email
                }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "accountCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 3,                 +
                         "email": "cat@x.com"     +
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    -- update by compound filters
    select graphql.resolve($$
        mutation {
            updateAccountCollection(
                set: {
                    email: "new@email.com"
                }
                filter: {
                    OR: [
                        { id: { eq: 3 } }
                        { id: { eq: 5 } }
                        { AND: [{ id: { eq: 1 } }, { email: { eq: "aardvark@x.com" } }] }
                    ]
                }
                atMost: 5
            ) {
                records { id, email }
            }
        }
        $$
    );
                                                                               resolve                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"data": {"updateAccountCollection": {"records": [{"id": 1, "email": "new@email.com"}, {"id": 3, "email": "new@email.com"}, {"id": 5, "email": "new@email.com"}]}}}
(1 row)

    rollback to savepoint a;
    -- delete by compound filters
    select graphql.resolve($$
        mutation {
            deleteFromAccountCollection(
                filter: {
                    OR: [
                        { id: { eq: 3 } }
                        { id: { eq: 5 } }
                        { id: { eq: 1 }, email: { eq: "aardvark@x.com" } }
                    ]
                }
                atMost: 5
            ) {
                records { id }
            }
        }
        $$
    );
                                          resolve                                          
-------------------------------------------------------------------------------------------
 {"data": {"deleteFromAccountCollection": {"records": [{"id": 1}, {"id": 3}, {"id": 5}]}}}
(1 row)

    rollback to savepoint a;
    -- columns named AND, OR and NOT, all compound filters will be disabled
    comment on schema public is e'@graphql({"inflect_names": false})';
    create table clashes(
        "AND" serial primary key,
        "OR" varchar(255) not null,
        "NOT" plan not null
    );
    insert into public.clashes("OR", "NOT")
    values
        ('aardvark@x.com', 'free'),
        ('bat@x.com', 'pro'),
        ('cat@x.com', 'enterprise'),
        ('dog@x.com', 'free'),
        ('elephant@x.com', 'pro');
    select jsonb_pretty(
        graphql.resolve($$
        {
            clashesCollection(filter: {AND: {eq: 1}, OR: {eq: "aardvark@x.com"}, NOT: {eq: "free"}}) {
                edges {
                    node {
                        AND
                        OR
                        NOT
                    }
                }
            }
        }
        $$)
    );
                  jsonb_pretty                   
-------------------------------------------------
 {                                              +
     "data": {                                  +
         "clashesCollection": {                 +
             "edges": [                         +
                 {                              +
                     "node": {                  +
                         "OR": "aardvark@x.com",+
                         "AND": 1,              +
                         "NOT": "free"          +
                     }                          +
                 }                              +
             ]                                  +
         }                                      +
     }                                          +
 }
(1 row)

    rollback to savepoint a;
    -- column named `AND`. AND compound filter will be disabled, others should work
    comment on schema public is e'@graphql({"inflect_names": false})';
    create table clashes(
        "AND" serial primary key,
        email varchar(255) not null,
        plan plan not null
    );
    insert into public.clashes(email, plan)
    values
        ('aardvark@x.com', 'free'),
        ('bat@x.com', 'pro'),
        ('cat@x.com', 'enterprise'),
        ('dog@x.com', 'free'),
        ('elephant@x.com', 'pro');
    select jsonb_pretty(
        graphql.resolve($$
        {
            clashesCollection(
                filter: {
                    OR: [
                        { AND: { eq: 3 } }
                        { AND: { eq: 5 } }
                        { AND: { eq: 2 }, NOT: { email: { eq: "aardvark@x.com" }} }
                    ]
                }
            ) {
                edges {
                    node {
                        AND
                        email
                        plan
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "clashesCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "AND": 2,                +
                         "plan": "pro",           +
                         "email": "bat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "AND": 3,                +
                         "plan": "enterprise",    +
                         "email": "cat@x.com"     +
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "AND": 5,                +
                         "plan": "pro",           +
                         "email": "elephant@x.com"+
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    rollback to savepoint a;
    -- column named `OR`. OR compound filter will be disabled, others should work
    comment on schema public is e'@graphql({"inflect_names": false})';
    create table clashes(
        id serial primary key,
        "OR" varchar(255) not null,
        plan plan not null
    );
    insert into public.clashes("OR", plan)
    values
        ('aardvark@x.com', 'free'),
        ('bat@x.com', 'pro'),
        ('cat@x.com', 'enterprise'),
        ('dog@x.com', 'free'),
        ('elephant@x.com', 'pro');
    select jsonb_pretty(
        graphql.resolve($$
        {
            clashesCollection(
                filter: {
                    AND: [ {NOT: {id: { eq: 2 }}}, { OR: { neq: "aardvark@x.com" }}]
                }
            ) {
                edges {
                    node {
                        id
                        OR
                        plan
                    }
                }
            }
        }
        $$)
    );
                  jsonb_pretty                   
-------------------------------------------------
 {                                              +
     "data": {                                  +
         "clashesCollection": {                 +
             "edges": [                         +
                 {                              +
                     "node": {                  +
                         "OR": "cat@x.com",     +
                         "id": 3,               +
                         "plan": "enterprise"   +
                     }                          +
                 },                             +
                 {                              +
                     "node": {                  +
                         "OR": "dog@x.com",     +
                         "id": 4,               +
                         "plan": "free"         +
                     }                          +
                 },                             +
                 {                              +
                     "node": {                  +
                         "OR": "elephant@x.com",+
                         "id": 5,               +
                         "plan": "pro"          +
                     }                          +
                 }                              +
             ]                                  +
         }                                      +
     }                                          +
 }
(1 row)

    rollback to savepoint a;
    -- column named `NOT`. NOT compound filter will be disabled, others should work
    comment on schema public is e'@graphql({"inflect_names": false})';
    create table clashes(
        id serial primary key,
        email varchar(255) not null,
        "NOT" plan not null
    );
    insert into public.clashes(email, "NOT")
    values
        ('aardvark@x.com', 'free'),
        ('bat@x.com', 'pro'),
        ('cat@x.com', 'enterprise'),
        ('dog@x.com', 'free'),
        ('elephant@x.com', 'pro');
    select jsonb_pretty(
        graphql.resolve($$
        {
            clashesCollection(
                filter: {
                    OR: [
                        {id: {eq: 1}}
                        {NOT: {eq: "pro"}, AND: [{id: {eq: 2}}, {email: {eq: "bat@x.com"}}]}
                    ]
                }
            ) {
                edges {
                    node {
                        id
                        email
                        NOT
                    }
                }
            }
        }
        $$)
    );
                   jsonb_pretty                    
---------------------------------------------------
 {                                                +
     "data": {                                    +
         "clashesCollection": {                   +
             "edges": [                           +
                 {                                +
                     "node": {                    +
                         "id": 1,                 +
                         "NOT": "free",           +
                         "email": "aardvark@x.com"+
                     }                            +
                 },                               +
                 {                                +
                     "node": {                    +
                         "id": 2,                 +
                         "NOT": "pro",            +
                         "email": "bat@x.com"     +
                     }                            +
                 }                                +
             ]                                    +
         }                                        +
     }                                            +
 }
(1 row)

    rollback to savepoint a;
rollback;
