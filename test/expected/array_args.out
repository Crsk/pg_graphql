begin;
    -- functions accepting arrays
    create function get_smallint_array_item(arr smallint[], i int)
        returns smallint language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getSmallintArrayItem(arr: [1, 2, 3], i: 1)
        }
    $$));
           jsonb_pretty            
-----------------------------------
 {                                +
     "data": {                    +
         "getSmallintArrayItem": 1+
     }                            +
 }
(1 row)

    create function get_int_array_item(arr int[], i int)
        returns int language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getIntArrayItem(arr: [1, 2, 3], i: 2)
        }
    $$));
         jsonb_pretty         
------------------------------
 {                           +
     "data": {               +
         "getIntArrayItem": 2+
     }                       +
 }
(1 row)

    create function get_bigint_array_item(arr bigint[], i int)
        returns bigint language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getBigintArrayItem(arr: ["1", "2", "3"], i: 3)
        }
    $$));
           jsonb_pretty            
-----------------------------------
 {                                +
     "data": {                    +
         "getBigintArrayItem": "3"+
     }                            +
 }
(1 row)

    create function get_real_array_item(arr real[], i int)
        returns real language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getRealArrayItem(arr: [1.1, 2.2, 3.3], i: 1)
        }
    $$));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "getRealArrayItem": 1.1+
     }                          +
 }
(1 row)

    create function get_double_array_item(arr double precision[], i int)
        returns double precision language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getDoubleArrayItem(arr: [1.1, 2.2, 3.3], i: 2)
        }
    $$));
           jsonb_pretty            
-----------------------------------
 {                                +
     "data": {                    +
         "getDoubleArrayItem": 2.2+
     }                            +
 }
(1 row)

    create function get_numeric_array_item(arr numeric[], i int)
        returns numeric language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getNumericArrayItem(arr: ["1.1", "2.2", "3.3"], i: 3)
        }
    $$));
             jsonb_pretty             
--------------------------------------
 {                                   +
     "data": {                       +
         "getNumericArrayItem": "3.3"+
     }                               +
 }
(1 row)

    create function get_bool_array_item(arr bool[], i int)
        returns bool language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getBoolArrayItem(arr: [true, false], i: 1)
        }
    $$));
           jsonb_pretty           
----------------------------------
 {                               +
     "data": {                   +
         "getBoolArrayItem": true+
     }                           +
 }
(1 row)

    create function get_uuid_array_item(arr uuid[], i int)
        returns uuid language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getUuidArrayItem(arr: ["e8dc3a9a-2c72-11ee-b094-776acede6790", "d3ef3a8c-2c72-11ee-b094-776acede7221"], i: 2)
        }
    $$));
                            jsonb_pretty                            
--------------------------------------------------------------------
 {                                                                 +
     "data": {                                                     +
         "getUuidArrayItem": "d3ef3a8c-2c72-11ee-b094-776acede7221"+
     }                                                             +
 }
(1 row)

    create function get_text_array_item(arr text[], i int)
        returns text language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getTextArrayItem(arr: ["hello", "world"], i: 1)
        }
    $$));
            jsonb_pretty             
-------------------------------------
 {                                  +
     "data": {                      +
         "getTextArrayItem": "hello"+
     }                              +
 }
(1 row)

    create function get_json_array_item(arr json[], i int)
        returns json language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getJsonArrayItem(arr: ["{\"hello\": \"world\"}", "{\"bye\": \"world\"}"], i: 2)
        }
    $$));
                    jsonb_pretty                    
----------------------------------------------------
 {                                                 +
     "data": {                                     +
         "getJsonArrayItem": "{\"bye\": \"world\"}"+
     }                                             +
 }
(1 row)

    create function get_jsonb_array_item(arr jsonb[], i int)
        returns jsonb language sql stable
    as $$ select arr[i]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            getJsonbArrayItem(arr: ["{\"hello\": \"world\"}", "{\"bye\": \"world\"}"], i: 1)
        }
    $$));
                     jsonb_pretty                      
-------------------------------------------------------
 {                                                    +
     "data": {                                        +
         "getJsonbArrayItem": "{\"hello\": \"world\"}"+
     }                                                +
 }
(1 row)

    -- functions returning arrays
    create function returns_smallint_array()
        returns smallint[] language sql stable
    as $$ select '{1, 2, 3}'::smallint[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsSmallintArray
        }
    $$));
           jsonb_pretty            
-----------------------------------
 {                                +
     "data": {                    +
         "returnsSmallintArray": [+
             1,                   +
             2,                   +
             3                    +
         ]                        +
     }                            +
 }
(1 row)

    create function returns_int_array()
        returns int[] language sql stable
    as $$ select '{1, 2, 3}'::int[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsIntArray
        }
    $$));
         jsonb_pretty         
------------------------------
 {                           +
     "data": {               +
         "returnsIntArray": [+
             1,              +
             2,              +
             3               +
         ]                   +
     }                       +
 }
(1 row)

    create function returns_bigint_array()
        returns bigint[] language sql stable
    as $$ select '{1, 2, 3}'::bigint[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsBigintArray
        }
    $$));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "returnsBigintArray": [+
             "1",               +
             "2",               +
             "3"                +
         ]                      +
     }                          +
 }
(1 row)

    create function returns_real_array()
        returns real[] language sql stable
    as $$ select '{1.1, 2.2, 3.3}'::real[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsRealArray
        }
    $$));
         jsonb_pretty          
-------------------------------
 {                            +
     "data": {                +
         "returnsRealArray": [+
             1.1,             +
             2.2,             +
             3.3              +
         ]                    +
     }                        +
 }
(1 row)

    create function returns_double_array()
        returns double precision[] language sql stable
    as $$ select '{1.1, 2.2, 3.3}'::double precision[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsDoubleArray
        }
    $$));
          jsonb_pretty           
---------------------------------
 {                              +
     "data": {                  +
         "returnsDoubleArray": [+
             1.1,               +
             2.2,               +
             3.3                +
         ]                      +
     }                          +
 }
(1 row)

    create function returns_numeric_array()
        returns numeric[] language sql stable
    as $$ select '{1.1, 2.2, 3.3}'::numeric[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsNumericArray
        }
    $$));
           jsonb_pretty           
----------------------------------
 {                               +
     "data": {                   +
         "returnsNumericArray": [+
             "1.1",              +
             "2.2",              +
             "3.3"               +
         ]                       +
     }                           +
 }
(1 row)

    create function returns_bool_array()
        returns bool[] language sql stable
    as $$ select '{true, false}'::bool[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsBoolArray
        }
    $$));
         jsonb_pretty          
-------------------------------
 {                            +
     "data": {                +
         "returnsBoolArray": [+
             true,            +
             false            +
         ]                    +
     }                        +
 }
(1 row)

    create function returns_uuid_array()
        returns uuid[] language sql stable
    as $$ select '{"e8dc3a9a-2c72-11ee-b094-776acede6790", "d3ef3a8c-2c72-11ee-b094-776acede7221"}'::uuid[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsUuidArray
        }
    $$));
                    jsonb_pretty                     
-----------------------------------------------------
 {                                                  +
     "data": {                                      +
         "returnsUuidArray": [                      +
             "e8dc3a9a-2c72-11ee-b094-776acede6790",+
             "d3ef3a8c-2c72-11ee-b094-776acede7221" +
         ]                                          +
     }                                              +
 }
(1 row)

    create function returns_text_array()
        returns text[] language sql stable
    as $$ select '{"hello", "world"}'::text[]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsTextArray
        }
    $$));
         jsonb_pretty          
-------------------------------
 {                            +
     "data": {                +
         "returnsTextArray": [+
             "hello",         +
             "world"          +
         ]                    +
     }                        +
 }
(1 row)

    create function returns_json_array()
        returns json[] language sql stable
    as $$ select array[json_build_object('hello', 'world'), json_build_object('bye', 'world')]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsJsonArray
        }
    $$));
              jsonb_pretty              
----------------------------------------
 {                                     +
     "data": {                         +
         "returnsJsonArray": [         +
             "{\"hello\" : \"world\"}",+
             "{\"bye\" : \"world\"}"   +
         ]                             +
     }                                 +
 }
(1 row)

    create function returns_jsonb_array()
        returns jsonb[] language sql stable
    as $$ select array[jsonb_build_object('hello', 'world'), jsonb_build_object('bye', 'world')]; $$;
    select jsonb_pretty(graphql.resolve($$
        query {
            returnsJsonbArray
        }
    $$));
             jsonb_pretty              
---------------------------------------
 {                                    +
     "data": {                        +
         "returnsJsonbArray": [       +
             "{\"hello\": \"world\"}",+
             "{\"bye\": \"world\"}"   +
         ]                            +
     }                                +
 }
(1 row)

rollback;
